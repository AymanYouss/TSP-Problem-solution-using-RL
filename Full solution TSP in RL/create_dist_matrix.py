from numpy import random
import numpy as np
def create_dist_matrix(n_dim = 6, opt = 0):
    if opt == 0:
        dist_mat = 100 + 1000 * random.rand(n_dim,n_dim)
        dist_mat = dist_mat.astype(int)
    elif opt == 1:
        dist_mat = np.array([[0, 2451, 713, 1018, 1631, 1374, 2408, 213, 2571, 875, 1420, 2145, 1972],
                         [2451, 0, 1745, 1524, 831, 1240, 959, 2596, 403, 1589, 1374, 357, 579],
                         [713, 1745, 0, 355, 920, 803, 1737, 851, 1858, 262, 940, 1453, 1260],
                         [1018, 1524, 355, 0, 700, 862, 1395, 1123, 1584, 466, 1056, 1280, 987],
                         [1631, 831, 920, 700, 0, 663, 1021, 1769, 949, 796, 879, 586, 371],
                         [1374, 1240, 803, 862, 663, 0, 1681, 1551, 1765, 547, 225, 887, 999],
                         [2408, 959, 1737, 1395, 1021, 1681, 0, 2493, 678, 1724, 1891, 1114, 701],
                         [213, 2596, 851, 1123, 1769, 1551, 2493, 0, 2699, 1038, 1605, 2300, 2099],
                         [2571, 403, 1858, 1584, 949, 1765, 678, 2699, 0, 1744, 1645, 653, 600],
                         [875, 1589, 262, 466, 796, 547, 1724, 1038, 1744, 0, 679, 1272, 1162],
                         [1420, 1374, 940, 1056, 879, 225, 1891, 1605, 1645, 679, 0, 1017, 1200],
                         [2145, 357, 1453, 1280, 586, 887, 1114, 2300, 653, 1272, 1017, 0, 504],
                         [1972, 579, 1260, 987, 371, 999, 701, 2099, 600, 1162, 1200, 504, 0],
                         ])
    elif opt == 2:
        dist_mat = np.array ([
                [ 727,  913,  764,  533,  492,  481,  651,  116,  167,  494,  243,  429, 1084,  559,  302,  315,  918,  767,  710,  596],
                [ 996,  610,  455,  216,  783,  179,  239,  613,  591,  563,  596,  237,  205,  384,  966,  885,  668,  491,  561,  943],
                [ 974, 1078,  547,  863,  840,  542,  580,  152,  605,  432,  460,  167,  604,  725,  502,  411,  834,  293,  878,  108],
                [ 980,  222,  548,  455,  221,  688,  269,  238,  952,  292,  929,  200,  265,  354,  759,  928,  677, 1072,  958,  337],
                [ 401,  843,  477,  157,  911, 1025,  962,  540,  148,  214,  881,  326,  798,  893,  921,  643,  542,  769,  987, 1029],
                [ 821,  852,  495,  606,  240,  582,  857,  733,  243,  195,  133,  225,  159,  568,  858,  205,  766, 1057,  541,  291],
                [ 536,  616,  530,  416,  366,  291,  245,  827,  910,  521,  732,  512,  131,  871,  384,  822, 1038,  955,  437,  543],
                [ 375,  188,  214, 1052,  870,  849,  464,  149,  168,  173,  320,  370,  841,  743,  718,  815,  312,  104,  549,  868],
                [ 629,  717,  284, 1085,  500,  588,  596,  736, 1053,  185,  968,  296,  738,  530,  908,  236,  420,  671,  746,  748],
                [1040,  414,  744,  263,  396,  360,  707,  327,  140,  254,  802,  588,  427,  892,  278,  273,  349,  578,  170,  926],
                [ 843,  704,  620,  383, 1048,  375,  518,  672,  475,  758,  345,  980,  887,  314,  572,  255,  189,  631,  152,  996],
                [ 965, 1059,  312,  142, 1037,  817,  583,  499,  475,  446,  907,  828,  315,  372,  161,  915,  844,  225,  648,  764],
                [ 751,  991,  245,  586,  477,  270,  472,  704,  601,  263,  174,  346,  172,  298,  344,  316,  249, 1015, 1060,  146],
                [ 458,  247,  982, 1074,  816,  748,  836,  458, 1017,  563, 1001, 1091,  812,  337,  301, 1043,  943,  341, 1022,  528],
                [ 713,  223,  730,  171,  894,  818,  521,  738,  573, 1058,  404,  170,  198, 1077,  203,  656,  727,  226,  335,  127],
                [ 296,  833,  235,  578,  782,  428,  244,  609,  279,  213,  767,  658,  920,  824,  936,  974, 1014,  915,  636,  967],
                [ 273,  445,  567,  188, 1008,  667,  236, 1030,  751,  369,  317,  546,  208,  160,  392,  773,  280,  559, 1099,  871],
                [ 616,  369,  111,  728,  288,  639,  501,  587,  170,  852,  438,  503,  623, 1002,  847, 1034,  258,  205, 1065,  534],
                [ 325,  299,  972,  800,  609,  941,  777,  919,  193,  337,  878,  812,  795,  484,  212,  479,  785,  480,  197,  316],
                [ 393,  443,  390,  946,  195,  530,  342,  778,  699,  656, 1080,  224,  956,  330,  407,  982,  809,  640,  428,  185]])

    return dist_mat


def create_dist_mat_2():
    dist_mat = np.array([[0, 2451, 713, 1018, 1631, 1374, 2408, 213, 2571, 875, 1420, 2145, 1972],
        [2451, 0, 1745, 1524, 831, 1240, 959, 2596, 403, 1589, 1374, 357, 579],
        [713, 1745, 0, 355, 920, 803, 1737, 851, 1858, 262, 940, 1453, 1260],
        [1018, 1524, 355, 0, 700, 862, 1395, 1123, 1584, 466, 1056, 1280, 987],
        [1631, 831, 920, 700, 0, 663, 1021, 1769, 949, 796, 879, 586, 371],
        [1374, 1240, 803, 862, 663, 0, 1681, 1551, 1765, 547, 225, 887, 999],
        [2408, 959, 1737, 1395, 1021, 1681, 0, 2493, 678, 1724, 1891, 1114, 701],
        [213, 2596, 851, 1123, 1769, 1551, 2493, 0, 2699, 1038, 1605, 2300, 2099],
        [2571, 403, 1858, 1584, 949, 1765, 678, 2699, 0, 1744, 1645, 653, 600],
        [875, 1589, 262, 466, 796, 547, 1724, 1038, 1744, 0, 679, 1272, 1162],
        [1420, 1374, 940, 1056, 879, 225, 1891, 1605, 1645, 679, 0, 1017, 1200],
        [2145, 357, 1453, 1280, 586, 887, 1114, 2300, 653, 1272, 1017, 0, 504],
        [1972, 579, 1260, 987, 371, 999, 701, 2099, 600, 1162, 1200, 504, 0],
        ])

    return dist_mat